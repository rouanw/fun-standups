{"version":3,"sources":["webpack://fun-standups/./src/pages/index.js"],"names":["availableTags","Array","from","Set","standups","standup","tags","filter","Boolean","tagColors","getTagColors","useState","visiblestandups","setVisiblestandups","currentTag","setCurrentTag","isHidingStandups","setHidingStandups","title","socialTitle","className","onClick","randomUrl","Math","floor","random","slug","window","location","assign","href","id","role","aria-labelledby","aria-controls","map","tag","index","key","setTimeout","includes","filterStandupsByTag","aria-checked","style","color","aria-live","display","aria-hidden","transition","opacity","onTransitionEnd"],"mappings":"2MAYMA,EAAgBC,MAAMC,KAAK,IAAIC,IAAI,IAAUC,OAAa,SAACC,GAAD,OAAaA,EAAQC,SAAOC,OAAOC,WAC7FC,GAAYC,SAwFlB,UAtFkB,WAChB,OAA8CC,cAASP,GAAhDQ,EAAP,KAAwBC,EAAxB,KACA,GAAoCF,gBAA7BG,EAAP,KAAmBC,EAAnB,KACA,GAA8CJ,eAAS,GAAhDK,EAAP,KAAyBC,EAAzB,KAGA,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,OAAOC,aAAW,IAC7B,2BAASC,UAAU,eACjB,sBAAIA,UAAU,WAAd,+CACA,8EACA,iIACA,2BACE,0BAAQA,UAAU,kBAChBC,QAAS,WACP,IAAIC,EAAY,CAAClB,EAASmB,KAAKC,MAAMD,KAAKE,SAAWrB,WAAkBsB,MACvEC,OAAOC,SAASC,OAAOP,KAH3B,wBAMA,qBAAGF,UAAU,oBAAoBU,KAAK,uCAAtC,uBAIJ,uBAAKV,UAAU,sBACb,qBAAGW,GAAG,gBAAN,WACA,uBACEX,UAAU,kBACVY,KAAK,aACLC,kBAAgB,eAChBC,gBAAc,YAEZlC,EAAcmC,KAAI,SAACC,EAAKC,GAAN,aAChB,8BACEC,IAAKD,EACLjB,UAAU,cACVC,QAAS,WACPJ,GAAkB,GAClBsB,YAAW,WACT1B,EA5CQ,SAACT,EAAUgC,GAAX,OAAmBhC,EAASG,QAAO,SAACF,GAAD,OAAaA,EAAQC,MAAQD,EAAQC,KAAKkC,SAASJ,MA4C3EK,CAAoBrC,EAAUgC,MAnC1C,KAqCTrB,EAAcqB,IAEhBJ,KAAK,QACLU,eAAcN,IAAQtB,EAAa,OAAS,QAC5C6B,MAAO,CACLC,MAAOR,IAAQtB,EAAa,QAAUL,EAAU2B,MAbpD,IAeOA,EAfP,GAgBEA,MAGN,wBAAMS,YAAU,UACd,0BACEzB,UAAU,qBACVC,QAAS,WACPJ,GAAkB,GAClBsB,YAAW,WACT1B,EAAmBT,KAtDV,KAwDXa,GAAkB,GAClBF,KAEF4B,MAAO,CACLG,QAAShC,EAAa,QAAU,SAEnC,wBAAMiC,cAAY,QAAlB,MAbD,mBAkBN,sBACEhB,GAAG,WACHX,UAAU,WACVuB,MAAO,CACLK,WAAW,4BACXC,QAAQ,IAAIjC,EAAmB,EAAI,IAErCkC,gBAAiB,kBAAMjC,GAAkB,KAExCL,EAAgBuB,KAAI,SAAC9B,GAAD,OAAa,gBAAC,IAAD,CAASiC,IAAKjC,EAAQa,MAAOb,QAASA,EAASI,UAAWA","file":"component---src-pages-index-js-b5cf0fb3a48055ca9964.js","sourcesContent":["import React, { useState } from 'react'\nimport _ from 'lodash'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"../components/fun-standups.sass\"\nimport Standup from \"../components/standup\"\nimport standups from \"../standup-data.json\"\nimport getTagColors from \"../get-tag-colors\"\n\nconst filterStandupsByTag = (standups, tag) => standups.filter((standup) => standup.tags && standup.tags.includes(tag))\n\nconst availableTags = Array.from(new Set(_.flatten(standups.map((standup) => standup.tags)).filter(Boolean)));\nconst tagColors = getTagColors();\n\nconst IndexPage = () => {\n  const [visiblestandups, setVisiblestandups] = useState(standups)\n  const [currentTag, setCurrentTag] = useState()\n  const [isHidingStandups, setHidingStandups] = useState(false)\n  const transitionTiming = 400\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" socialTitle />\n      <section className=\"page-header\">\n        <h1 className=\"display\">Remote-friendly standup ideas for your team</h1>\n        <p>Tired of having the same old Zoom call every day?</p>\n        <p>Use these fun and creative standup formats to mix things up and learn more about your team and work.</p>\n        <div>\n          <button className=\"button -primary\"\n            onClick={() => {\n              let randomUrl = [standups[Math.floor(Math.random() * standups.length)].slug]\n              window.location.assign(randomUrl)\n            }}\n          >Gimme a random idea!</button>\n          <a className=\"button -secondary\" href=\"https://forms.gle/QtQXGZ3E3UCaMnoG9\">I have an idea...</a>\n        </div>\n      </section>\n\n      <nav className=\"standup-navigation\">\n        <p id=\"filter-label\">Filter:</p>\n        <div\n          className=\"standup-filters\"\n          role=\"radiogroup\"\n          aria-labelledby=\"filter-label\"\n          aria-controls=\"standups\">\n          {\n            availableTags.map((tag, index) => (\n              <button\n                key={index}\n                className=\"button -tag\"\n                onClick={() => {\n                  setHidingStandups(true)\n                  setTimeout(() => {\n                    setVisiblestandups(filterStandupsByTag(standups, tag))\n                  }, transitionTiming)\n                  setCurrentTag(tag)\n                }}\n                role=\"radio\"\n                aria-checked={tag === currentTag ? 'true' : 'false'}\n                style={{\n                  color: tag === currentTag ? 'white' : tagColors[tag]\n                }}\n                key={tag}\n              >{tag}</button>\n            ))\n          }\n          <span aria-live=\"polite\">\n            <button\n              className=\"button -tag -clear\"\n              onClick={() => {\n                setHidingStandups(true)\n                setTimeout(() => {\n                  setVisiblestandups(standups)\n                }, transitionTiming)\n                setHidingStandups(true)\n                setCurrentTag()\n              }}\n              style={{\n                display: currentTag ? 'block' : 'none'\n              }}\n            ><span aria-hidden=\"true\">Ã— </span>Clear filter</button>\n          </span>\n        </div>\n      </nav>\n\n      <ul\n        id=\"standups\"\n        className=\"standups\"\n        style={{\n          transition: `opacity ${transitionTiming}ms ease-in-out`,\n          opacity: `${isHidingStandups ? 0 : 1}`\n        }}\n        onTransitionEnd={() => setHidingStandups(false)}\n      >\n        {visiblestandups.map((standup) => <Standup key={standup.title} standup={standup} tagColors={tagColors}></Standup>)}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}