{"version":3,"file":"component---src-pages-index-js-5a3a369ec0a8e63120a6.js","mappings":"yMAYMA,EAAgBC,MAAMC,KAAK,IAAIC,IAAI,IAAUC,EAAAA,KAAa,SAACC,GAAD,OAAaA,EAAQC,IAArB,KAA4BC,OAAOC,WAC7FC,GAAYC,EAAAA,EAAAA,KA+GlB,UA7GkB,WAChB,OAA8CC,EAAAA,EAAAA,UAASP,GAAhDQ,EAAP,KAAwBC,EAAxB,KACA,GAAoCF,EAAAA,EAAAA,YAA7BG,EAAP,KAAmBC,EAAnB,KACA,GAA8CJ,EAAAA,EAAAA,WAAS,GAAhDK,EAAP,KAAyBC,EAAzB,KACA,GAA0CN,EAAAA,EAAAA,eAASO,GAA5CC,EAAP,KAAsBC,EAAtB,MACAC,EAAAA,EAAAA,YAAU,WACR,MAA4B,IAAIC,MAAM,IAAIC,gBAAgBC,OAAOC,SAASC,QAAS,CACjFC,IAAK,SAACC,EAAcC,GAAf,OAAwBD,EAAaD,IAAIE,EAAzC,IADCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAGjBX,EAAiB,CACfU,QAAAA,EACAC,OAAAA,GAEH,GAAE,IAGH,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,OAAOC,aAAW,IAC7B,uBAAKC,UAAU,QACb,2BAASA,UAAU,eACjB,sBAAIA,UAAU,WAAd,+CACA,2BACE,8EACA,kIAEF,uBAAKA,UAAU,WACb,0BACEA,UAAU,kBACVC,QAAS,WACP,IAAIC,EAAY,CAAChC,EAASiC,KAAKC,MAAMD,KAAKE,SAAWnC,EAAAA,SAAkBoC,MACvEhB,OAAOC,SAASgB,OAAOL,EACxB,GALH,wBAOA,qBACEF,UAAU,oBACVQ,KAAK,sCACLC,IAAI,YAHN,sBAM0B,WAA3BxB,aAAA,EAAAA,EAAeW,UAAiD,aAA1BX,aAAA,EAAAA,EAAeY,QAAuB,+BAC3E,uBAAKG,UAAU,oBAAf,sEACW,MAEf,+BACE,uBAAKA,UAAU,aAAaU,IAAI,sDAAsDC,IAAI,qCAI9F,uBAAKX,UAAU,sBACb,qBAAGY,GAAG,gBAAN,WACA,uBACEZ,UAAU,kBACVa,KAAK,aACL,kBAAgB,eAChB,gBAAc,YACd,0BACEb,UAAU,cACVC,QAAS,WACPlB,GAAkB,GAClB+B,YAAW,WACTnC,EAAmBT,GACnBa,GAAkB,EACnB,GAjDY,KAkDbF,GACD,EACDgC,KAAK,QACL,eAAcjC,EAAa,QAAU,QAXvC,YAcEd,EAAciD,KAAI,SAACC,EAAKC,GAAN,OAChB,0BACEjB,UAAU,cACVC,QAAS,WACPlB,GAAkB,GAClB+B,YAAW,WACTnC,EAjFQ,SAACT,EAAU8C,GAAX,OAAmB9C,EAASG,QAAO,SAACF,GAAD,OAAaA,EAAQC,MAAQD,EAAQC,KAAK8C,SAASF,EAAnD,GAAnC,CAiFWG,CAAoBjD,EAAU8C,GAClD,GA/DQ,KAgETnC,EAAcmC,EACf,EACDH,KAAK,QACL,eAAcG,IAAQpC,EAAa,OAAS,QAC5CwC,MAAO,CACLC,MAAOL,IAAQpC,EAAa,QAAUL,EAAUyC,IAElDM,IAAKN,GACLA,EAhBc,MAsBxB,qBAAGJ,GAAG,gBAAgB,YAAU,aAAhC,WAAwDlC,EAAgB6C,OAAxE,eAEA,sBACEX,GAAG,WACHZ,UAAU,WACVoB,MAAO,CACLI,WAAW,4BACXC,QAAQ,IAAI3C,EAAmB,EAAI,IAErC4C,gBAAiB,kBAAM3C,GAAkB,EAAxB,GAEhBL,EAAgBqC,KAAI,SAAC5C,GAAD,OAAa,gBAAC,IAAD,CAASmD,IAAKnD,EAAQ2B,MAAO3B,QAASA,EAASI,UAAWA,GAAvE,KAI5B,C","sources":["webpack://fun-standups/./src/pages/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport _ from 'lodash'\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport \"../components/fun-standups.sass\"\nimport Standup from \"../components/standup\"\nimport standups from \"../standup-data.json\"\nimport getTagColors from \"../get-tag-colors\"\n\nconst filterStandupsByTag = (standups, tag) => standups.filter((standup) => standup.tags && standup.tags.includes(tag))\n\nconst availableTags = Array.from(new Set(_.flatten(standups.map((standup) => standup.tags)).filter(Boolean)));\nconst tagColors = getTagColors();\n\nconst IndexPage = () => {\n  const [visiblestandups, setVisiblestandups] = useState(standups)\n  const [currentTag, setCurrentTag] = useState()\n  const [isHidingStandups, setHidingStandups] = useState(false)\n  const [installStatus, setInstallStatus] = useState(undefined)\n  useEffect(() => {\n    const { install, status } = new Proxy(new URLSearchParams(window.location.search), {\n      get: (searchParams, prop) => searchParams.get(prop),\n    })\n    setInstallStatus({\n      install,\n      status,\n    })\n  }, []);\n  const transitionTiming = 400\n\n  return (\n    <Layout>\n      <Seo title=\"Home\" socialTitle />\n      <div className=\"hero\">\n        <section className=\"page-header\">\n          <h1 className=\"display\">Remote-friendly standup ideas for your team</h1>\n          <div>\n            <p>Tired of having the same old Zoom call every day?</p>\n            <p>Use these fun and creative standup formats to mix things up and learn more about your team and work.</p>\n          </div>\n          <div className=\"buttons\">\n            <button\n              className=\"button -primary\"\n              onClick={() => {\n                let randomUrl = [standups[Math.floor(Math.random() * standups.length)].slug]\n                window.location.assign(randomUrl)\n              }}\n            >Random standup idea!</button>\n            <a\n              className=\"button -secondary\"\n              href=\"https://forms.gle/QtQXGZ3E3UCaMnoG9\"\n              rel=\"external\"\n            >I have an idea...</a>\n          </div>\n          {installStatus?.install === 'slack' && installStatus?.status === 'success' ? <section>\n            <div className=\"install -success\">Yay! You've successfully installed the Fun Standups Slack App! ðŸ’œ</div>\n          </section> : null}\n        </section>\n        <section>\n          <img className=\"hero-image\" src=\"/women-talking-concept-illustration_114360-8881.jpg\" alt=\"Illustration of people talking\"/>\n        </section>\n      </div>\n\n      <nav className=\"standup-navigation\">\n        <p id=\"filter-label\">Filter:</p>\n        <div\n          className=\"standup-filters\"\n          role=\"radiogroup\"\n          aria-labelledby=\"filter-label\"\n          aria-controls=\"standups\">\n          <button\n            className=\"button -tag\"\n            onClick={() => {\n              setHidingStandups(true)\n              setTimeout(() => {\n                setVisiblestandups(standups)\n                setHidingStandups(false)\n              }, transitionTiming)\n              setCurrentTag()\n            }}\n            role=\"radio\"\n            aria-checked={currentTag ? 'false' : 'true'}\n          >Show all</button>\n          {\n            availableTags.map((tag, index) => (\n              <button\n                className=\"button -tag\"\n                onClick={() => {\n                  setHidingStandups(true)\n                  setTimeout(() => {\n                    setVisiblestandups(filterStandupsByTag(standups, tag))\n                  }, transitionTiming)\n                  setCurrentTag(tag)\n                }}\n                role=\"radio\"\n                aria-checked={tag === currentTag ? 'true' : 'false'}\n                style={{\n                  color: tag === currentTag ? 'white' : tagColors[tag]\n                }}\n                key={tag}\n              >{tag}</button>\n            ))\n          }\n        </div>\n      </nav>\n\n      <p id=\"standup-count\" aria-live=\"assertive\">{`Showing ${visiblestandups.length} stand-ups.`}</p>\n\n      <ul\n        id=\"standups\"\n        className=\"standups\"\n        style={{\n          transition: `opacity ${transitionTiming}ms ease-in-out`,\n          opacity: `${isHidingStandups ? 0 : 1}`\n        }}\n        onTransitionEnd={() => setHidingStandups(false)}\n      >\n        {visiblestandups.map((standup) => <Standup key={standup.title} standup={standup} tagColors={tagColors}></Standup>)}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["availableTags","Array","from","Set","standups","standup","tags","filter","Boolean","tagColors","getTagColors","useState","visiblestandups","setVisiblestandups","currentTag","setCurrentTag","isHidingStandups","setHidingStandups","undefined","installStatus","setInstallStatus","useEffect","Proxy","URLSearchParams","window","location","search","get","searchParams","prop","install","status","title","socialTitle","className","onClick","randomUrl","Math","floor","random","slug","assign","href","rel","src","alt","id","role","setTimeout","map","tag","index","includes","filterStandupsByTag","style","color","key","length","transition","opacity","onTransitionEnd"],"sourceRoot":""}