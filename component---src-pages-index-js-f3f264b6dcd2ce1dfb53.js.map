{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["availableTags","Array","from","Set","standups","map","standup","tags","filter","Boolean","tagColors","getTagColors","IndexPage","useState","visiblestandups","setVisiblestandups","currentTag","setCurrentTag","title","socialTitle","className","tag","onClick","includes","filterStandupsByTag","style","backgroundColor","fontWeight","opacity","key","Math","floor","random","length"],"mappings":"wNAYMA,EAAgBC,MAAMC,KAAK,IAAIC,IAAI,IAAUC,EAASC,KAAI,SAACC,GAAD,OAAaA,EAAQC,SAAOC,OAAOC,WAC7FC,EAAYC,cA4DHC,UA1DG,WAAO,IAAD,EACwBC,mBAAST,GAAhDU,EADe,KACEC,EADF,OAEcF,qBAA7BG,EAFe,KAEHC,EAFG,KAGtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOC,aAAW,IAC7B,yBAAKC,UAAU,aACb,yBAAKA,UAAU,eAAf,0JAGA,yBAAKA,UAAU,QAEXpB,EAAcK,KAAI,SAACgB,GAAD,OAChB,4BACED,UAAU,iBACVE,QAAS,WACPL,EAAcI,GACdN,EAtBU,SAACX,EAAUiB,GAAX,OAAmBjB,EAASI,QAAO,SAACF,GAAD,OAAaA,EAAQC,MAAQD,EAAQC,KAAKgB,SAASF,MAsB7EG,CAAoBpB,EAAUiB,KAEnDI,MAAO,CACLC,gBAAiBhB,EAAUW,GAC3BM,WAAYN,IAAQL,EAAa,OAAS,SAC1CY,QAAUZ,GAAcK,IAAQL,EAAiB,GAAJ,GAE/Ca,IAAKR,GAEJA,MAIP,6BACE,4BACED,UAAU,iBACVE,QAAS,WACPL,IACAF,EAAmBX,KAJvB,YASA,4BAAQgB,UAAU,wBAChBE,QAAS,WACPP,EAAmB,CAACX,EAAS0B,KAAKC,MAAMD,KAAKE,SAAW5B,EAAS6B,WACjEhB,MAHJ,aAUJ,yBAAKG,UAAU,YACZN,EAAgBT,KAAI,SAACC,GAAD,OAAa,kBAAC,IAAD,CAASuB,IAAKvB,EAAQY,MAAOZ,QAASA,EAASI,UAAWA,Y","file":"component---src-pages-index-js-f3f264b6dcd2ce1dfb53.js","sourcesContent":["import React, { useState } from 'react'\nimport _ from 'lodash'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"../components/standup.css\"\nimport Standup from \"../components/standup\"\nimport standups from \"../standup-data.json\"\nimport getTagColors from \"../get-tag-colors\"\n\nconst filterStandupsByTag = (standups, tag) => standups.filter((standup) => standup.tags && standup.tags.includes(tag));\n\nconst availableTags = Array.from(new Set(_.flatten(standups.map((standup) => standup.tags)).filter(Boolean)));\nconst tagColors = getTagColors();\n\nconst IndexPage = () => {\n  const [visiblestandups, setVisiblestandups] = useState(standups)\n  const [currentTag, setCurrentTag] = useState()\n  return (\n    <Layout>\n      <SEO title=\"Home\" socialTitle />\n      <div className=\"container\">\n        <div className=\"description\">\n          Tired of having the same old Zoom call every day? Use these fun and creative standup formats to mix things up and learn more about your team and work.\n        </div>\n        <div className=\"tags\">\n          {\n            availableTags.map((tag) => (\n              <button\n                className=\"tag tag-button\"\n                onClick={() => {\n                  setCurrentTag(tag)\n                  setVisiblestandups(filterStandupsByTag(standups, tag))\n                }}\n                style={{\n                  backgroundColor: tagColors[tag],\n                  fontWeight: tag === currentTag ? 'bold' : 'normal',\n                  opacity: !currentTag || tag === currentTag ? 1 : 0.5\n                }}\n                key={tag}\n              >\n                {tag}\n              </button>\n            ))\n          }\n          <div>\n            <button\n              className=\"tag tag-button\"\n              onClick={() => {\n                setCurrentTag()\n                setVisiblestandups(standups)\n              }}\n            >\n              show all\n            </button>\n            <button className=\"tag tag-button random\"\n              onClick={() => {\n                setVisiblestandups([standups[Math.floor(Math.random() * standups.length)]])\n                setCurrentTag()\n              }}\n            >\n              random!\n            </button>\n          </div>\n        </div>\n        <div className=\"standups\">\n          {visiblestandups.map((standup) => <Standup key={standup.title} standup={standup} tagColors={tagColors}></Standup>)}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}